
Here are 50 questions focused on JavaScript objects to help you practice and develop your skills:

Object Manipulation and Retrieval
You are given an object containing person details (e.g., name, age, country). Return an object that contains only the name and age properties.
Write a function to check if a property exists in an object.
Given an object representing a car with properties like make, model, and year, return the value of the model property.
Create a function that adds a new property to an object and returns the updated object.
Write a function to delete a property from an object.
Given an object with nested properties, write a function to access a nested property.
Create a function that merges two objects into one.
Given an object, write a function to get an array of all its keys.
Write a function to get an array of all the values of an object.
You are given an object with properties. Write a function to check if a given value exists in the object.
Create a function that swaps the keys and values of an object.
Write a function that checks if an object is empty (i.e., has no properties).
You are given an object where each key represents an item, and each value represents the price. Write a function to sum all the prices.
Given an object with numeric values, return the key with the highest value.
Create a function that removes a property from an object if the value is undefined or null.
Write a function to find the common keys between two objects.
Given an object of student grades, write a function to find the average grade.
Create a function to clone an object (i.e., create a shallow copy of it).
Write a function that accepts an object and returns the number of properties it has.
Create a function that converts an object into a query string (e.g., {name: "John", age: 30} → ?name=John&age=30).
Object Iteration and Modification
Write a function that iterates over an object and returns a new object with only properties that are strings.
Create a function that converts the values of an object into an array and returns it.
Given an object where values are arrays, write a function that flattens the values into a single array.
Write a function to check if an object contains at least one property with a value greater than a given threshold.
Given an object with key-value pairs, write a function to return a new object where the values are doubled.
Write a function that takes an object and returns a new object with all keys converted to uppercase.
You are given an object with properties and values. Write a function to return the sum of all the numeric values in the object.
Create a function that returns an array of objects where each object contains a key and a value from a given object.
Write a function that checks if a given key exists in an object and returns true or false.
You are given an object with several user details, return a new object with only users older than 18 years old.
Create a function that merges an array of objects into a single object by adding all properties together.
Write a function that accepts two objects and merges them, with the second object overwriting any duplicate keys in the first object.
Write a function that updates an object with a given property and value, but only if that property doesn’t already exist in the object.
Given an object where values are arrays of numbers, return a new object where the sum of the numbers in each array is the new value.
You are given an object with keys representing product names and values representing prices. Write a function to find the product with the highest price.
Object Transformation and Destructuring
Write a function that takes an object and a key as parameters and returns a new object without that key.
Given an object, use destructuring to extract a specific property value.
Create a function that accepts an object and returns a new object where the keys are reversed.
Given an object with properties of different types, return an object where the properties are grouped by their data type (e.g., strings, numbers).
You are given an object with a property that contains an array of numbers. Write a function to return the sum of all numbers in that array using destructuring.
Write a function that accepts an object and transforms the keys to be camelCase from snake_case.
Create a function to deep clone an object (i.e., handle nested objects as well).
Write a function that uses object destructuring to swap the values of two properties in an object.
You are given an object containing date information (e.g., year, month, day). Write a function to convert the object into a readable date format.
Write a function that accepts an object with key-value pairs and returns an object with the keys and values swapped.
Object Comparison and Performance
Write a function that checks if two objects are equal (i.e., same keys and values, not references).
Create a function that compares two objects and returns true if they have the same set of keys (order doesn’t matter).
Given two objects, write a function to check if they are structurally identical (i.e., same properties with the same types).
You are given two objects that may have the same properties, but values may differ. Write a function to find all properties that have different values between the two objects.
Create a function to compare the properties of two objects and return a new object with the differences (key-value pairs that don’t match).